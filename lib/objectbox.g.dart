// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'db/item_entity.dart';
import 'db/meal_entity.dart';
import 'db/totals_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 5525551686764216896),
      name: 'ItemEntity',
      lastPropertyId: const obx_int.IdUid(5, 93815004487389140),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4163784211644887543),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 730359701641279739),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8196047392969286379),
            name: 'quantity',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7371321660112577791),
            name: 'details',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 93815004487389140),
            name: 'mealId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 400723080546916043),
            relationTarget: 'MealEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 4745339621366622546),
      name: 'MealEntity',
      lastPropertyId: const obx_int.IdUid(4, 1487034146492212923),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2148589850392042147),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4583610515793528461),
            name: 'mealType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4091984566338867779),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1487034146492212923),
            name: 'totalsId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 819731068130855629),
            relationTarget: 'TotalsEntity')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 5520597455904925133),
            name: 'items',
            targetId: const obx_int.IdUid(1, 5525551686764216896))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 8816944756537336257),
      name: 'TotalsEntity',
      lastPropertyId: const obx_int.IdUid(8, 9200375209572801144),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5640758913491779225),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4917463859342706761),
            name: 'calories',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5632030304026680750),
            name: 'proteinG',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4461713343755077471),
            name: 'fatG',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8944829806303820764),
            name: 'carbohydratesG',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3220467510324416036),
            name: 'fiberG',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7351568410090988055),
            name: 'sugarG',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9200375209572801144),
            name: 'mealId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(3, 1344664409450701390),
            relationTarget: 'MealEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 8816944756537336257),
      lastIndexId: const obx_int.IdUid(3, 1344664409450701390),
      lastRelationId: const obx_int.IdUid(1, 5520597455904925133),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ItemEntity: obx_int.EntityDefinition<ItemEntity>(
        model: _entities[0],
        toOneRelations: (ItemEntity object) => [object.meal],
        toManyRelations: (ItemEntity object) => {},
        getId: (ItemEntity object) => object.id,
        setId: (ItemEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ItemEntity object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final detailsOffset = fbb.writeString(object.details);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.quantity);
          fbb.addOffset(3, detailsOffset);
          fbb.addInt64(4, object.meal.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final quantityParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final detailsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = ItemEntity(
              name: nameParam, quantity: quantityParam, details: detailsParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.meal.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.meal.attach(store);
          return object;
        }),
    MealEntity: obx_int.EntityDefinition<MealEntity>(
        model: _entities[1],
        toOneRelations: (MealEntity object) => [object.totals],
        toManyRelations: (MealEntity object) =>
            {obx_int.RelInfo<MealEntity>.toMany(1, object.id): object.items},
        getId: (MealEntity object) => object.id,
        setId: (MealEntity object, int id) {
          object.id = id;
        },
        objectToFB: (MealEntity object, fb.Builder fbb) {
          final mealTypeOffset = fbb.writeString(object.mealType);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, mealTypeOffset);
          fbb.addInt64(2, object.date.millisecondsSinceEpoch);
          fbb.addInt64(3, object.totals.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final mealTypeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final object = MealEntity(mealType: mealTypeParam, date: dateParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.totals.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.totals.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MealEntity>(object.items,
              store, obx_int.RelInfo<MealEntity>.toMany(1, object.id));
          return object;
        }),
    TotalsEntity: obx_int.EntityDefinition<TotalsEntity>(
        model: _entities[2],
        toOneRelations: (TotalsEntity object) => [object.meal],
        toManyRelations: (TotalsEntity object) => {},
        getId: (TotalsEntity object) => object.id,
        setId: (TotalsEntity object, int id) {
          object.id = id;
        },
        objectToFB: (TotalsEntity object, fb.Builder fbb) {
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.calories);
          fbb.addFloat64(2, object.proteinG);
          fbb.addFloat64(3, object.fatG);
          fbb.addFloat64(4, object.carbohydratesG);
          fbb.addFloat64(5, object.fiberG);
          fbb.addFloat64(6, object.sugarG);
          fbb.addInt64(7, object.meal.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final caloriesParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final proteinGParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final fatGParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final carbohydratesGParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final fiberGParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final sugarGParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final object = TotalsEntity(
              calories: caloriesParam,
              proteinG: proteinGParam,
              fatG: fatGParam,
              carbohydratesG: carbohydratesGParam,
              fiberG: fiberGParam,
              sugarG: sugarGParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.meal.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.meal.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ItemEntity] entity fields to define ObjectBox queries.
class ItemEntity_ {
  /// see [ItemEntity.id]
  static final id =
      obx.QueryIntegerProperty<ItemEntity>(_entities[0].properties[0]);

  /// see [ItemEntity.name]
  static final name =
      obx.QueryStringProperty<ItemEntity>(_entities[0].properties[1]);

  /// see [ItemEntity.quantity]
  static final quantity =
      obx.QueryIntegerProperty<ItemEntity>(_entities[0].properties[2]);

  /// see [ItemEntity.details]
  static final details =
      obx.QueryStringProperty<ItemEntity>(_entities[0].properties[3]);

  /// see [ItemEntity.meal]
  static final meal = obx.QueryRelationToOne<ItemEntity, MealEntity>(
      _entities[0].properties[4]);
}

/// [MealEntity] entity fields to define ObjectBox queries.
class MealEntity_ {
  /// see [MealEntity.id]
  static final id =
      obx.QueryIntegerProperty<MealEntity>(_entities[1].properties[0]);

  /// see [MealEntity.mealType]
  static final mealType =
      obx.QueryStringProperty<MealEntity>(_entities[1].properties[1]);

  /// see [MealEntity.date]
  static final date =
      obx.QueryDateProperty<MealEntity>(_entities[1].properties[2]);

  /// see [MealEntity.totals]
  static final totals = obx.QueryRelationToOne<MealEntity, TotalsEntity>(
      _entities[1].properties[3]);

  /// see [MealEntity.items]
  static final items = obx.QueryRelationToMany<MealEntity, ItemEntity>(
      _entities[1].relations[0]);
}

/// [TotalsEntity] entity fields to define ObjectBox queries.
class TotalsEntity_ {
  /// see [TotalsEntity.id]
  static final id =
      obx.QueryIntegerProperty<TotalsEntity>(_entities[2].properties[0]);

  /// see [TotalsEntity.calories]
  static final calories =
      obx.QueryIntegerProperty<TotalsEntity>(_entities[2].properties[1]);

  /// see [TotalsEntity.proteinG]
  static final proteinG =
      obx.QueryDoubleProperty<TotalsEntity>(_entities[2].properties[2]);

  /// see [TotalsEntity.fatG]
  static final fatG =
      obx.QueryDoubleProperty<TotalsEntity>(_entities[2].properties[3]);

  /// see [TotalsEntity.carbohydratesG]
  static final carbohydratesG =
      obx.QueryDoubleProperty<TotalsEntity>(_entities[2].properties[4]);

  /// see [TotalsEntity.fiberG]
  static final fiberG =
      obx.QueryDoubleProperty<TotalsEntity>(_entities[2].properties[5]);

  /// see [TotalsEntity.sugarG]
  static final sugarG =
      obx.QueryDoubleProperty<TotalsEntity>(_entities[2].properties[6]);

  /// see [TotalsEntity.meal]
  static final meal = obx.QueryRelationToOne<TotalsEntity, MealEntity>(
      _entities[2].properties[7]);
}
